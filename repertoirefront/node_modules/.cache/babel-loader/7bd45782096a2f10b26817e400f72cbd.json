{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eric\\\\Documents\\\\Spring_Project\\\\repertoire\\\\repertoire-main\\\\repertoirefront\\\\src\\\\components\\\\Personne.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, Link, TextField } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Service from '../Service';\nimport NotFound from '../NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Personne() {\n  _s();\n\n  const [nom, setNom] = useState('');\n  const [prenom, setPrenom] = useState('');\n  const [nomInit, setNomInit] = useState('');\n  const [prenomInit, setPrenomInit] = useState('');\n  const home = useNavigate();\n  const {\n    id\n  } = useParams();\n  const idp = Number(id);\n  const personne = {\n    nom,\n    prenom,\n    idp\n  }; // Pas besoin\n  // const personneUpdated = {nomUpdated, prenomUpdated, idp};\n\n  useEffect(() => {\n    getPersonne(idp);\n  }, []);\n\n  const getPersonne = () => {\n    Service.getById(idp).then(response => {\n      setNomInit(response.data.nom);\n      setPrenomInit(response.data.prenom);\n    }).catch(error => {\n      console.log(\"There is a error when personne details (Service.getById())\", error);\n    });\n  };\n\n  const updatePersonne = e => {\n    if (idp) {\n      Service.editById(idp, personne).then(console.log(\"Personne updated to : \", personne), home('/')).catch(error => {\n        console.log(\"Update function doesn't work : \", error);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Update a Personne \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {}, idp, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"Nom\",\n            label: nomInit,\n            value: nom,\n            placeholder: \"Nom de la personne\",\n            onChange: e => setNom(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"Prenom\",\n            label: prenomInit,\n            value: prenom,\n            placeholder: \"Prenom de la personne\",\n            onChange: e => setPrenom(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: e => {\n              updatePersonne(idp, personne);\n            },\n            children: \" Sauvegarder \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: '/',\n        children: \" Retour \\xE0 l'acceuil \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Personne, \"7NuGmpO4EuPIC1DQxoLzhH6FtzI=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Personne;\n\nvar _c;\n\n$RefreshReg$(_c, \"Personne\");","map":{"version":3,"sources":["C:/Users/eric/Documents/Spring_Project/repertoire/repertoire-main/repertoirefront/src/components/Personne.js"],"names":["React","useState","useEffect","Button","Container","Link","TextField","Box","useNavigate","useParams","Service","NotFound","Personne","nom","setNom","prenom","setPrenom","nomInit","setNomInit","prenomInit","setPrenomInit","home","id","idp","Number","personne","getPersonne","getById","then","response","data","catch","error","console","log","updatePersonne","e","editById","target","value"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport { Button, Container, Link, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Service from '../Service';\r\nimport NotFound from '../NotFound';\r\n\r\nexport default function Personne() {\r\n\r\n  const [nom, setNom] = useState('');\r\n  const [prenom, setPrenom] = useState('');\r\n  const [nomInit, setNomInit] = useState('');\r\n  const [prenomInit, setPrenomInit] = useState('');\r\n  const home = useNavigate();\r\n  const {id} = useParams();\r\n  const idp = Number(id);\r\n\r\n  const personne = {nom,prenom,idp};\r\n  // Pas besoin\r\n  // const personneUpdated = {nomUpdated, prenomUpdated, idp};\r\n\r\n  useEffect(() => {\r\n    getPersonne(idp);\r\n  }, []);\r\n  \r\n  const getPersonne = () => {\r\n    Service.getById(idp)\r\n    .then(response =>{\r\n      setNomInit(response.data.nom);\r\n      setPrenomInit(response.data.prenom);\r\n    })\r\n    .catch(error => {\r\n      console.log(\"There is a error when personne details (Service.getById())\",error);\r\n    })\r\n  }\r\n\r\n  const updatePersonne = (e) => {\r\n    if(idp){\r\n      Service.editById(idp,personne)\r\n      .then(\r\n        console.log(\"Personne updated to : \", personne) ,\r\n        home('/') \r\n      )\r\n      .catch(error => {\r\n        console.log(\"Update function doesn't work : \",error);\r\n      })\r\n    }\r\n    else{\r\n      return (\r\n        <NotFound/>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Container>\r\n      <h1> Update a Personne </h1> \r\n      <Box component=\"form\">\r\n          < div>\r\n              <p key={idp}></p>\r\n              <TextField\r\n              id=\"Nom\"\r\n              label={nomInit}\r\n              value={nom}\r\n              placeholder='Nom de la personne'\r\n              onChange = {(e)=>setNom(e.target.value)}\r\n              />\r\n               <TextField\r\n              id=\"Prenom\"\r\n              label={prenomInit}\r\n              value={prenom}\r\n              placeholder='Prenom de la personne'\r\n              onChange = {(e)=>setPrenom(e.target.value)}\r\n              />\r\n              <hr/>\r\n              <Button variant=\"outlined\" onClick={((e)=>{updatePersonne(idp,personne)})} > Sauvegarder </Button>\r\n            </div>  \r\n      </Box>  \r\n      <hr/>\r\n      <Link href={'/'}> Retour à l'acceuil </Link>\r\n    </Container>  \r\n  </React.Fragment>\r\n  );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}