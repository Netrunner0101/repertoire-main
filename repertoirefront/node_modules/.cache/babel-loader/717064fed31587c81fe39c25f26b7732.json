{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eric\\\\Documents\\\\Spring_Project\\\\repertoire\\\\repertoire-main\\\\repertoirefront\\\\src\\\\components\\\\Personne.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, Link, TextField } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useParams } from 'react-router-dom';\nimport Service from '../Service';\nimport NotFound from '../NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Personne() {\n  _s();\n\n  const [nom, setNom] = useState('');\n  const [prenom, setPrenom] = useState(''); // const [nomUpdated, setNomUpdated] = useState('');\n  // const [prenomUpdated, setPrenomUpdated] = useState('');\n\n  const {\n    id\n  } = useParams();\n  const idp = Number(id);\n  const personneReceive = {\n    nom,\n    prenom,\n    idp\n  };\n  useEffect(() => {\n    getPersonne(idp);\n  }, []);\n\n  const getPersonne = () => {\n    Service.getById(idp).then(response => {\n      setNom(response.data.nom);\n      setPrenom(response.data.prenom);\n      console.log(\"Recupération DB de Personne\", personneReceive);\n    }).catch(error => {\n      console.log(\"There is a error when personne details (Service.getById())\", error);\n    });\n  };\n\n  const updatePersonne = e => {\n    e.prevenDefault;\n\n    if (idp) {} else {\n      return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Update a Personne \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"Nom\",\n            label: nom,\n            placeholder: \"Mettre le nom de la personne\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"Prenom\",\n            label: prenom,\n            placeholder: \"Mettre le prenom de la personne\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            children: \" Sauvegarder \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: '/',\n        children: \" Retour \\xE0 l'acceuil \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Personne, \"iIO/TmR6IT/FDh3aEofSjq74VCI=\", false, function () {\n  return [useParams];\n});\n\n_c = Personne;\n\nvar _c;\n\n$RefreshReg$(_c, \"Personne\");","map":{"version":3,"sources":["C:/Users/eric/Documents/Spring_Project/repertoire/repertoire-main/repertoirefront/src/components/Personne.js"],"names":["React","useState","useEffect","Button","Container","Link","TextField","Box","useParams","Service","NotFound","Personne","nom","setNom","prenom","setPrenom","id","idp","Number","personneReceive","getPersonne","getById","then","response","data","console","log","catch","error","updatePersonne","e","prevenDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,SAAlC,QAAmD,eAAnD;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC,CAHiC,CAIjC;AACA;;AAEA,QAAM;AAACe,IAAAA;AAAD,MAAOR,SAAS,EAAtB;AACA,QAAMS,GAAG,GAAGC,MAAM,CAACF,EAAD,CAAlB;AAEA,QAAMG,eAAe,GAAG;AAACP,IAAAA,GAAD;AAAKE,IAAAA,MAAL;AAAYG,IAAAA;AAAZ,GAAxB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,WAAW,CAACH,GAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMG,WAAW,GAAG,MAAM;AACtBX,IAAAA,OAAO,CAACY,OAAR,CAAgBJ,GAAhB,EACDK,IADC,CACIC,QAAQ,IAAG;AACfV,MAAAA,MAAM,CAACU,QAAQ,CAACC,IAAT,CAAcZ,GAAf,CAAN;AACAG,MAAAA,SAAS,CAACQ,QAAQ,CAACC,IAAT,CAAcV,MAAf,CAAT;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CP,eAA3C;AACD,KALC,EAMDQ,KANC,CAMKC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ,EAAyEE,KAAzE;AACD,KARC;AASH,GAVD;;AAYA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,aAAF;;AACA,QAAGd,GAAH,EAAO,CAEN,CAFD,MAGI;AACF,0BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF,GAVD;;AAYA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACA,QAAC,SAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAA,kCACI,QAAC,SAAD;AACA,YAAA,EAAE,EAAC,KADH;AAEA,YAAA,KAAK,EAAEL,GAFP;AAGA,YAAA,WAAW,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMK,QAAC,SAAD;AACD,YAAA,EAAE,EAAC,QADF;AAED,YAAA,KAAK,EAAEE,MAFN;AAGD,YAAA,WAAW,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA,kBANL,eAWI;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAYI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAkBE;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAnEuBH,Q;UAOTH,S;;;KAPSG,Q","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport { Button, Container, Link, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { useParams } from 'react-router-dom';\r\nimport Service from '../Service';\r\nimport NotFound from '../NotFound';\r\n\r\nexport default function Personne() {\r\n\r\n  const [nom, setNom] = useState('');\r\n  const [prenom, setPrenom] = useState('');\r\n  // const [nomUpdated, setNomUpdated] = useState('');\r\n  // const [prenomUpdated, setPrenomUpdated] = useState('');\r\n\r\n  const {id} = useParams();\r\n  const idp = Number(id);\r\n\r\n  const personneReceive = {nom,prenom,idp};\r\n\r\n  useEffect(() => {\r\n    getPersonne(idp);\r\n  }, []);\r\n  \r\n\r\n  const getPersonne = () => {\r\n      Service.getById(idp)\r\n    .then(response =>{\r\n      setNom(response.data.nom);\r\n      setPrenom(response.data.prenom);\r\n      console.log(\"Recupération DB de Personne\", personneReceive);\r\n    })\r\n    .catch(error => {\r\n      console.log(\"There is a error when personne details (Service.getById())\",error);\r\n    })\r\n  }\r\n\r\n  const updatePersonne = (e) => {\r\n    e.prevenDefault\r\n    if(idp){\r\n\r\n    }\r\n    else{\r\n      return (\r\n        <NotFound/>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Container>\r\n      <h1> Update a Personne </h1> \r\n      <Box component=\"form\">\r\n          < div>\r\n              <TextField\r\n              id=\"Nom\"\r\n              label={nom}\r\n              placeholder='Mettre le nom de la personne'\r\n              />\r\n               <TextField\r\n              id=\"Prenom\"\r\n              label={prenom}\r\n              placeholder='Mettre le prenom de la personne'\r\n              />\r\n              <hr/>\r\n              <Button variant=\"outlined\"  > Sauvegarder </Button>\r\n            </div>  \r\n      </Box>  \r\n      <hr/>\r\n      <Link href={'/'}> Retour à l'acceuil </Link>\r\n    </Container>  \r\n  </React.Fragment>\r\n  );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}